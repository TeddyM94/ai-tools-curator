name: Update AI Tools Site

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:      # Allow manual trigger
  push:
    branches:
      - main            # Run on main branch updates

jobs:
  update-site:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for git operations
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run tool discovery
        env:
          CONFIG_JSON: ${{ secrets.CONFIG_JSON }}
        run: |
          echo "$CONFIG_JSON" > config.json
          python src/main.py --mode discover
      
      - name: Generate site
        run: python src/main.py --mode generate
      
      - name: Setup Git user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: Commit data updates
        run: |
          git add data/
          git diff --quiet && git diff --staged --quiet || (git commit -m "data: Update tool data [skip ci]" && git push)
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          commit_message: "chore: Update site [skip ci]"
          enable_jekyll: false
          
      - name: Create weekly digest
        if: github.event.schedule == '0 0 * * 0'  # Only on Sundays
        run: python src/main.py --mode digest
      
      - name: Report status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.runId;
            const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
            const status = '${{ job.status }}';
            
            const message = `Site update ${status.toLowerCase()}\n${run_url}`;
            
            await github.rest.issues.create({
              owner,
              repo,
              title: `Site Update Report - ${new Date().toISOString().split('T')[0]}`,
              body: message,
              labels: ['automated-report']
            });
